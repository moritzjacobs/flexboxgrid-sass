/**
 * Defaults
 */

$grid-columns: 12;
$gutter-width: 1rem;
$outer-margin: 1rem;
$breakpoints: sm 480px, md 768px, lg 1024px, xl 1200px, xxl 1440px;

$max-width: 1200px;

/**
 * Mixins
 */

@mixin at($size) {
	@media only screen and (min-width: $size) {
		@content;
	}
}
@mixin until($size) {
	@media only screen and (max-width: $size - 1px) {
		@content;
	}
}

@mixin flexboxgrid-sass-col-common {
	box-sizing: border-box;

	// split @include flex(0, 0, auto) into individual props
	flex-grow: 0;
	flex-shrink: 0;

	// we leave flex-basis(auto) out of common because
	// in some spots we need it and some we dont
	// more why here: https://github.com/kristoferjoseph/flexboxgrid/issues/126

	padding-right: $half-gutter-width;
	padding-left: $half-gutter-width;
}

/**
 * var calcs
 */

$gutter-compensation: $gutter-width * 0.5 * -1;
$half-gutter-width: $gutter-width * 0.5;

/**
 * classes
 */

*,
*:before,
*:after {
	box-sizing: border-box;
}

.container {
	margin-right: auto;
	margin-left: auto;
	padding-right: $outer-margin;
	padding-left: $outer-margin;
	max-width: $max-width;
}

.container-full {
	width: 100%;
	padding-right: $outer-margin;
	padding-left: $outer-margin;
}

.row {
	box-sizing: border-box;
	display: flex;
	flex: 0 1 auto;
	flex-direction: row;
	flex-wrap: wrap;
	margin-right: $gutter-compensation;
	margin-left: $gutter-compensation;
}

.row.reverse {
	flex-direction: row-reverse;
}

.col.reverse {
	flex-direction: column-reverse;
}

@mixin make-col($name) {
	.col-#{$name} {
		@include flexboxgrid-sass-col-common;
		flex-basis: auto;
	}
	@for $i from 0 through $grid-columns {
		.col-#{$name}-#{$i} {
			@include flexboxgrid-sass-col-common;
			flex-basis: 100% / $grid-columns * $i;
			max-width: 100% / $grid-columns * $i;
		}
	}
	@for $i from 0 through $grid-columns {
		.col-#{$name}-offset-#{$i} {
			@include flexboxgrid-sass-col-common;
			margin-left: 100% / $grid-columns * $i;
		}
	}
	.col-#{$name} {
		flex-grow: 1;
		flex-basis: 0;
		max-width: 100%;
	}
	.start-#{$name} {
		justify-content: flex-start;
		text-align: start;
	}

	.center-#{$name} {
		justify-content: center;
		text-align: center;
	}

	.end-#{$name} {
		justify-content: flex-end;
		text-align: end;
	}

	.top-#{$name} {
		align-items: flex-start;
	}

	.middle-#{$name} {
		align-items: center;
	}

	.bottom-#{$name} {
		align-items: flex-end;
	}

	.around-#{$name} {
		justify-content: space-around;
	}

	.between-#{$name} {
		justify-content: space-between;
	}

	.first-#{$name} {
		order: -1;
	}

	.last-#{$name} {
		order: 1;
	}
}

@include make-col(xs);
@each $breakpoint in $breakpoints {
	$name: nth($breakpoint, 1);
	$size: nth($breakpoint, 2);
	@include at($size) {
		@include make-col($name);
	}
}
